# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

# Further edited by me to fit the project structure

name: "[Web] Deploy to Firebase Hosting on merge"

on:
  #push:
  #branches:  [ "main" ]
  workflow_dispatch:

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "firebase"
  cancel-in-progress: false

jobs:
  version:
    name: Create version number and extract applicationId
    # Works only on ubuntu
    runs-on: ubuntu-latest
    outputs:
      app_id: ${{ steps.extract_app_id.outputs.app_id }}
      firebase_id: ${{ steps.firebase_id.outputs.firebase_id }}
      version: ${{ steps.gitversion.outputs.nuGetVersion }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v1.1.1
        with:
          versionSpec: "5.x"

      - name: Use GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v1.1.1

      - name: Create version.txt with nuGetVersion
        run: echo ${{ steps.gitversion.outputs.nuGetVersion  }} > version.txt

      - name: Update version in YAML
        run: |
          sed -i "s/^version: .*/version: $(tr -d '\n' < version.txt)+${{ github.run_number }}/" pubspec.yaml

      - name: Upload pubspec.yaml
        uses: actions/upload-artifact@v4
        with:
          name: pubspec
          path: pubspec.yaml

      - name: Get applicationId
        id: extract_app_id
        run: |
          application_id=$(grep -oP 'applicationId\s*=\s*"\K[^"]+' android/app/build.gradle)
          echo "app_id=$application_id"
          echo "app_id=$application_id" >> "$GITHUB_OUTPUT"

      - name: Get Firebase app id
        id: firebase_id
        run: |
          firebase_id=$(grep -A 2 'static const FirebaseOptions android' lib/firebase_options.dart | grep 'appId' | awk -F"'" '{print $2}')
          echo "firebase_id=$firebase_id"
          echo "firebase_id=$firebase_id" >> "$GITHUB_OUTPUT"
  build_and_deploy:
    runs-on: ubuntu-latest
    needs: version
    steps:
      - uses: actions/checkout@v4
      - name: Get pubspec
        uses: actions/download-artifact@v4
        with:
          name: pubspec
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          cache: true
      - run: flutter build web --release
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_APP_ELEVATE_CORE }}
          channelId: live
          projectId: app-elevate-core
