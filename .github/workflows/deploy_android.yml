name: Android Release

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
jobs:
  version:
    name: Create version number
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v1.1.1
      with:
        versionSpec: "5.x"
    - name: Use GitVersion
      id: gitversion
      uses: gittools/actions/gitversion/execute@v1.1.1
    - name: Create version.txt with nuGetVersion
      run: echo ${{ steps.gitversion.outputs.nuGetVersion  }} > version.txt
    - name: Update version in YAML
      run: |
        sed -i "s/^version: .*/version: $(tr -d '\n' < version.txt)+${{ github.run_number }}/" pubspec.yaml
    - name: Upload pubspec.yaml
      uses: actions/upload-artifact@v4
      with:
        name: pubspec
        path: pubspec.yaml
  build:
    needs: version
    runs-on: ubuntu-latest
    steps:
    - name: Get pubspec
      uses: actions/download-artifact@v4
      with:
        name: pubspec
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Upload pubspec.yaml
      uses: actions/upload-artifact@v4
      with:
        name: pubspec2
        path: pubspec.yaml
    - name: Download Android keystore
      id: android_keystore
      uses: timheuer/base64-to-file@v1.2.4
      with:
        fileName: upload-keystore.jks
        encodedString: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
    - name: Create key.properties
      run: |
        echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > android/key.properties
        echo "storePassword=${{ secrets.ANDROID_STORE_PASSWORD }}" >> android/key.properties
        echo "keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}" >> android/key.properties
        echo "keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}" >> android/key.properties
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: "12.x"
        cache: 'gradle'
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        channel: 'stable'
        cache: true
    - name: Start release build
      run: |
        flutter config --no-analytics
        flutter config --no-cli-animations
        flutter build appbundle --split-debug-info symbolsAndroid --obfuscate
    - name: Release Artifact Upload
      uses: actions/upload-artifact@v4
      with:
        name: android-release
        path: build/app/outputs/bundle/release/app-release.aab
    - name: Debug symbols Artifact Upload
      uses: actions/upload-artifact@v4
      with:
        name: symbolsAndroid
        path: symbolsAndroid
  deploy:
    name: Deploy Android Build
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Get Android Build from artifacts
      uses: actions/download-artifact@v4
      with:
        name: android-release
    - name: Release Build to internal track
      uses: r0adkll/upload-google-play@v1
      with:
        serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT }}
        packageName: ${{ vars.ANDROID_PACKAGE_NAME }}
        releaseFiles: app-release.aab
        track: internal
        status: draft
  symbols:
    name: Upload debug symbols
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Get Android debug symbols from artifacts
      uses: actions/download-artifact@v4
      with:
        name: symbolsAndroid
    - name: GitHub Action for Firebase
      uses: w9jds/firebase-action@v13.11.4
      with:
        GCP_SA_KEY: ${{ secrets.FIREBASE_CRASHALYTICS_KEY }}
        args: login:list #crashlytics:symbols:upload --app=1:939051306678:android:01036b4a8805db6784e017 symbolsAndroid




              